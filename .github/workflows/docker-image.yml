name: Docker Image CI

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: GodricBeaumarchais/lol-ps-challenge

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4.1.2
    
    - name: Set env
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "REGISTRY=${{env.REGISTRY}}" >> $GITHUB_ENV

    # Configurer QEMU pour l'émulation multi-architecture
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # Configurer Buildx pour les builds multi-architecture
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    # Créer un nouveau builder avec le driver 'docker-container' pour permettre la construction multi-arch
    - name: Create new builder instance
      run: |
        docker buildx create --name mybuilder --use --driver docker-container
        docker buildx inspect --bootstrap

    # Connexion au registre Docker
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKERSECRET }}
    
    # Extraction des métadonnées pour les tags et labels Docker
    - name: Extract metadata (tags, labels) for Docker
      id: meta_api
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}

    # Construction et push de l'image Docker pour plusieurs architectures
    - name: Build and push Docker image
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta_api.outputs.tags }}
        labels: ${{ steps.meta_api.outputs.labels }}
